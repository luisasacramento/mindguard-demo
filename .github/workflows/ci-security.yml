name: CI + DevSecOps pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      python-version: 3.11
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-json-report semgrep snyk requests

  semgrep:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep JSON
        run: |
          mkdir -p reports
          semgrep --config ./ci/semgrep-rules --json > reports/semgrep-report.json || true
          cat reports/semgrep-report.json | jq '.summary'
      - name: Upload Semgrep report
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-report
          path: reports/semgrep-report.json

  snyk:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          mkdir -p reports
          snyk auth $SNYK_TOKEN
          snyk test --json > reports/snyk-report.json || true
          snyk monitor
      - name: Upload Snyk report
        uses: actions/upload-artifact@v3
        with:
          name: snyk-report
          path: reports/snyk-report.json

  tests:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Run Pytest JSON
        run: |
          mkdir -p reports
          pytest -q --disable-warnings --maxfail=1 --json-report --json-report-file=reports/pytest.json || true
      - name: Upload Pytest report
        uses: actions/upload-artifact@v3
        with:
          name: pytest-report
          path: reports/pytest.json

  zap:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Start app (background)
        run: |
          docker run -d --name mindguard-svc -p 8000:8000 ghcr.io/luisasacramento/mindguard-demo:latest
          sleep 10
      - name: OWASP ZAP baseline scan
        uses: zaproxy/action-baseline@v0.5.0
        with:
          target: 'http://localhost:8000'
          rules_file_name: ci/zap-ignore.conf
      - name: Upload ZAP report
        uses: actions/upload-artifact@v3
        with:
          name: zap-report
          path: reports/

  sonar:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          args: >
            -Dsonar.projectKey=mindguard-demo
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
